'use strict';Object.defineProperty(exports,'__esModule',{value:true});var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};var _react=require('react');var _react2=_interopRequireDefault(_react);var _propTypes=require('prop-types');var _propTypes2=_interopRequireDefault(_propTypes);require('../css/styles.css');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _objectWithoutProperties(obj,keys){var target={};for(var i in obj){if(keys.indexOf(i)>=0)continue;if(!Object.prototype.hasOwnProperty.call(obj,i))continue;target[i]=obj[i]}return target}/*! @gov.au/direction-links v2.1.7 *//***************************************************************************************************************************************************************
 *
 * direction-links function
 *
 * Use direction links to link up and down within the DOM or back to a parent page.
 *
 **************************************************************************************************************************************************************/// The following line will be replaced automatically with generic imports for the ES5 pipeline.
// You can safely ignore this bit if you use this module with pancake
//
/**
 * All direction options
 *
 * @type {Object}
 */var directions={up:'au-direction-link--up',right:'au-direction-link--right',down:'au-direction-link--down',left:'au-direction-link--left'};/**
 * DEFAULT
 * The direction-links component
 *
 * @param  {string}  linkComponent    - The component used for the link
 * @param  {boolean} dark             - Add the dark variation class, optional
 * @param  {string}  link             - The link target, optional
 * @param  {string}  text             - The text of the CTA link
 * @param  {string}  direction        - The direction for the arrow; can be either: up right down left, default: 'right'
 * @param  {string}  className        - An additional class, optional
 * @param  {object}  attributeOptions - Any other attribute options
 */var AUdirectionLink=function AUdirectionLink(_ref){var linkComponent=_ref.linkComponent,dark=_ref.dark,link=_ref.link,text=_ref.text,direction=_ref.direction,_ref$className=_ref.className,className=_ref$className===undefined?'':_ref$className,attributeOptions=_objectWithoutProperties(_ref,['linkComponent','dark','link','text','direction','className']);var LinkComponent=linkComponent;if(link){// If we are using a normal link
if(LinkComponent==='a'){attributeOptions.href=link}// If we are using a link component
else if(typeof LinkComponent==='function'){attributeOptions.to=link}return _react2.default.createElement(LinkComponent,_extends({className:'au-direction-link '+className+' '+directions[direction]+(dark?' au-direction-link--dark':'')},attributeOptions),text)}else{return _react2.default.createElement('button',_extends({className:'au-direction-link '+className+' '+directions[direction]+(dark?' au-direction-link--dark':'')},attributeOptions),text)}};AUdirectionLink.propTypes={dark:_propTypes2.default.bool,link:_propTypes2.default.string,text:_propTypes2.default.string.isRequired,direction:_propTypes2.default.oneOf(['up','right','down','left']).isRequired,className:_propTypes2.default.string,linkComponent:_propTypes2.default.oneOfType([_propTypes2.default.string,_propTypes2.default.func])};AUdirectionLink.defaultProps={direction:'right',linkComponent:'a'};exports.default=AUdirectionLink;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlYWN0LmVzNS5qcyJdLCJuYW1lcyI6WyJkaXJlY3Rpb25zIiwidXAiLCJyaWdodCIsImRvd24iLCJsZWZ0IiwiQVVkaXJlY3Rpb25MaW5rIiwibGlua0NvbXBvbmVudCIsImRhcmsiLCJsaW5rIiwidGV4dCIsImRpcmVjdGlvbiIsImNsYXNzTmFtZSIsImF0dHJpYnV0ZU9wdGlvbnMiLCJMaW5rQ29tcG9uZW50IiwiaHJlZiIsInRvIiwicHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwiYm9vbCIsInN0cmluZyIsImlzUmVxdWlyZWQiLCJvbmVPZiIsIm9uZU9mVHlwZSIsImZ1bmMiLCJkZWZhdWx0UHJvcHMiXSwibWFwcGluZ3MiOiJvU0FTQSw0QiwyQ0FDQSxxQyxtREFNQSw2QixxUkFoQkEscUNBQ0E7Ozs7OztnS0FZQTtBQUNBO0FBQ0E7QUFJQTs7OztHQUtBLEdBQU1BLFlBQWEsQ0FDbEJDLEdBQUksdUJBRGMsQ0FFbEJDLE1BQU8sMEJBRlcsQ0FHbEJDLEtBQU0seUJBSFksQ0FJbEJDLEtBQU0seUJBSlksQ0FBbkIsQ0FRQTs7Ozs7Ozs7Ozs7R0FZQSxHQUFNQyxpQkFBa0IsUUFBbEJBLGdCQUFrQixNQUF5RixJQUF0RkMsY0FBc0YsTUFBdEZBLGFBQXNGLENBQXZFQyxJQUF1RSxNQUF2RUEsSUFBdUUsQ0FBakVDLElBQWlFLE1BQWpFQSxJQUFpRSxDQUEzREMsSUFBMkQsTUFBM0RBLElBQTJELENBQXJEQyxTQUFxRCxNQUFyREEsU0FBcUQscUJBQTFDQyxTQUEwQyxDQUExQ0EsU0FBMEMsNEJBQTlCLEVBQThCLGdCQUF2QkMsZ0JBQXVCLCtGQUNoSCxHQUFNQyxlQUFnQlAsYUFBdEIsQ0FFQSxHQUFJRSxJQUFKLENBQVcsQ0FDVjtBQUNBLEdBQUlLLGdCQUFrQixHQUF0QixDQUE0QixDQUMzQkQsaUJBQWlCRSxJQUFqQixDQUF3Qk4sSUFDeEIsQ0FDRDtBQUhBLElBSUssSUFBSSxNQUFPSyxjQUFQLEdBQXlCLFVBQTdCLENBQTBDLENBQzlDRCxpQkFBaUJHLEVBQWpCLENBQXNCUCxJQUN0QixDQUVELE1BQ0MsK0JBQUMsYUFBRCxXQUFlLCtCQUFrQ0csU0FBbEMsS0FBaURYLFdBQVlVLFNBQVosQ0FBakQsRUFBNkVILEtBQU8sMEJBQVAsQ0FBb0MsRUFBakgsQ0FBZixFQUE2SUssZ0JBQTdJLEVBQWtLSCxJQUFsSyxDQUVELENBYkQsSUFjSyxDQUNKLE1BQ0Msa0RBQVEsK0JBQWtDRSxTQUFsQyxLQUFpRFgsV0FBWVUsU0FBWixDQUFqRCxFQUE2RUgsS0FBTywwQkFBUCxDQUFvQyxFQUFqSCxDQUFSLEVBQXNJSyxnQkFBdEksRUFBMkpILElBQTNKLENBRUQsQ0FDRCxDQXRCRCxDQXdCQUosZ0JBQWdCVyxTQUFoQixDQUE0QixDQUMzQlQsS0FBTVUsb0JBQVVDLElBRFcsQ0FFM0JWLEtBQU1TLG9CQUFVRSxNQUZXLENBRzNCVixLQUFNUSxvQkFBVUUsTUFBVixDQUFpQkMsVUFISSxDQUkzQlYsVUFBV08sb0JBQVVJLEtBQVYsQ0FBZ0IsQ0FBRSxJQUFGLENBQVEsT0FBUixDQUFpQixNQUFqQixDQUF5QixNQUF6QixDQUFoQixFQUFtREQsVUFKbkMsQ0FLM0JULFVBQVdNLG9CQUFVRSxNQUxNLENBTTNCYixjQUFlVyxvQkFBVUssU0FBVixDQUFvQixDQUFFTCxvQkFBVUUsTUFBWixDQUFvQkYsb0JBQVVNLElBQTlCLENBQXBCLENBTlksQ0FBNUIsQ0FTQWxCLGdCQUFnQm1CLFlBQWhCLENBQStCLENBQzlCZCxVQUFXLE9BRG1CLENBRTlCSixjQUFlLEdBRmUsQ0FBL0IsQyxnQkFLZUQsZSIsImZpbGUiOiJyZWFjdC5lczUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGdvdi5hdS9kaXJlY3Rpb24tbGlua3MgdjIuMS43ICovXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4gKlxuICogZGlyZWN0aW9uLWxpbmtzIGZ1bmN0aW9uXG4gKlxuICogVXNlIGRpcmVjdGlvbiBsaW5rcyB0byBsaW5rIHVwIGFuZCBkb3duIHdpdGhpbiB0aGUgRE9NIG9yIGJhY2sgdG8gYSBwYXJlbnQgcGFnZS5cbiAqXG4gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG5cbmltcG9ydCBSZWFjdCwgeyBGcmFnbWVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5cblxuLy8gVGhlIGZvbGxvd2luZyBsaW5lIHdpbGwgYmUgcmVwbGFjZWQgYXV0b21hdGljYWxseSB3aXRoIGdlbmVyaWMgaW1wb3J0cyBmb3IgdGhlIEVTNSBwaXBlbGluZS5cbi8vIFlvdSBjYW4gc2FmZWx5IGlnbm9yZSB0aGlzIGJpdCBpZiB5b3UgdXNlIHRoaXMgbW9kdWxlIHdpdGggcGFuY2FrZVxuLy9cbmltcG9ydCAnLi4vY3NzL3N0eWxlcy5jc3MnO1xuXG5cbi8qKlxuICogQWxsIGRpcmVjdGlvbiBvcHRpb25zXG4gKlxuICogQHR5cGUge09iamVjdH1cbiAqL1xuY29uc3QgZGlyZWN0aW9ucyA9IHtcblx0dXA6ICdhdS1kaXJlY3Rpb24tbGluay0tdXAnLFxuXHRyaWdodDogJ2F1LWRpcmVjdGlvbi1saW5rLS1yaWdodCcsXG5cdGRvd246ICdhdS1kaXJlY3Rpb24tbGluay0tZG93bicsXG5cdGxlZnQ6ICdhdS1kaXJlY3Rpb24tbGluay0tbGVmdCcsXG59O1xuXG5cbi8qKlxuICogREVGQVVMVFxuICogVGhlIGRpcmVjdGlvbi1saW5rcyBjb21wb25lbnRcbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9ICBsaW5rQ29tcG9uZW50ICAgIC0gVGhlIGNvbXBvbmVudCB1c2VkIGZvciB0aGUgbGlua1xuICogQHBhcmFtICB7Ym9vbGVhbn0gZGFyayAgICAgICAgICAgICAtIEFkZCB0aGUgZGFyayB2YXJpYXRpb24gY2xhc3MsIG9wdGlvbmFsXG4gKiBAcGFyYW0gIHtzdHJpbmd9ICBsaW5rICAgICAgICAgICAgIC0gVGhlIGxpbmsgdGFyZ2V0LCBvcHRpb25hbFxuICogQHBhcmFtICB7c3RyaW5nfSAgdGV4dCAgICAgICAgICAgICAtIFRoZSB0ZXh0IG9mIHRoZSBDVEEgbGlua1xuICogQHBhcmFtICB7c3RyaW5nfSAgZGlyZWN0aW9uICAgICAgICAtIFRoZSBkaXJlY3Rpb24gZm9yIHRoZSBhcnJvdzsgY2FuIGJlIGVpdGhlcjogdXAgcmlnaHQgZG93biBsZWZ0LCBkZWZhdWx0OiAncmlnaHQnXG4gKiBAcGFyYW0gIHtzdHJpbmd9ICBjbGFzc05hbWUgICAgICAgIC0gQW4gYWRkaXRpb25hbCBjbGFzcywgb3B0aW9uYWxcbiAqIEBwYXJhbSAge29iamVjdH0gIGF0dHJpYnV0ZU9wdGlvbnMgLSBBbnkgb3RoZXIgYXR0cmlidXRlIG9wdGlvbnNcbiAqL1xuY29uc3QgQVVkaXJlY3Rpb25MaW5rID0gKHsgbGlua0NvbXBvbmVudCwgZGFyaywgbGluaywgdGV4dCwgZGlyZWN0aW9uLCBjbGFzc05hbWUgPSAnJywgLi4uYXR0cmlidXRlT3B0aW9ucyB9KSA9PiB7XG5cdGNvbnN0IExpbmtDb21wb25lbnQgPSBsaW5rQ29tcG9uZW50O1xuXG5cdGlmKCBsaW5rICkge1xuXHRcdC8vIElmIHdlIGFyZSB1c2luZyBhIG5vcm1hbCBsaW5rXG5cdFx0aWYoIExpbmtDb21wb25lbnQgPT09ICdhJyApIHtcblx0XHRcdGF0dHJpYnV0ZU9wdGlvbnMuaHJlZiA9IGxpbms7XG5cdFx0fVxuXHRcdC8vIElmIHdlIGFyZSB1c2luZyBhIGxpbmsgY29tcG9uZW50XG5cdFx0ZWxzZSBpZiggdHlwZW9mIExpbmtDb21wb25lbnQgPT09ICdmdW5jdGlvbicgKSB7XG5cdFx0XHRhdHRyaWJ1dGVPcHRpb25zLnRvID0gbGluaztcblx0XHR9XG5cblx0XHRyZXR1cm4gKFxuXHRcdFx0PExpbmtDb21wb25lbnQgY2xhc3NOYW1lPXsgYGF1LWRpcmVjdGlvbi1saW5rICR7IGNsYXNzTmFtZSB9ICR7IGRpcmVjdGlvbnNbIGRpcmVjdGlvbiBdIH0keyBkYXJrID8gJyBhdS1kaXJlY3Rpb24tbGluay0tZGFyaycgOiAnJyB9YCB9IHsgLi4uYXR0cmlidXRlT3B0aW9ucyB9PnsgdGV4dCB9PC9MaW5rQ29tcG9uZW50PlxuXHRcdCk7XG5cdH1cblx0ZWxzZSB7XG5cdFx0cmV0dXJuIChcblx0XHRcdDxidXR0b24gY2xhc3NOYW1lPXsgYGF1LWRpcmVjdGlvbi1saW5rICR7IGNsYXNzTmFtZSB9ICR7IGRpcmVjdGlvbnNbIGRpcmVjdGlvbiBdIH0keyBkYXJrID8gJyBhdS1kaXJlY3Rpb24tbGluay0tZGFyaycgOiAnJyB9YCB9IHsgLi4uYXR0cmlidXRlT3B0aW9ucyB9PnsgdGV4dCB9PC9idXR0b24+XG5cdFx0KTtcblx0fVxufTtcblxuQVVkaXJlY3Rpb25MaW5rLnByb3BUeXBlcyA9IHtcblx0ZGFyazogUHJvcFR5cGVzLmJvb2wsXG5cdGxpbms6IFByb3BUeXBlcy5zdHJpbmcsXG5cdHRleHQ6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcblx0ZGlyZWN0aW9uOiBQcm9wVHlwZXMub25lT2YoWyAndXAnLCAncmlnaHQnLCAnZG93bicsICdsZWZ0JyBdKS5pc1JlcXVpcmVkLFxuXHRjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG5cdGxpbmtDb21wb25lbnQ6IFByb3BUeXBlcy5vbmVPZlR5cGUoWyBQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMuZnVuYyBdKVxufTtcblxuQVVkaXJlY3Rpb25MaW5rLmRlZmF1bHRQcm9wcyA9IHtcblx0ZGlyZWN0aW9uOiAncmlnaHQnLFxuXHRsaW5rQ29tcG9uZW50OiAnYScsXG59O1xuXG5leHBvcnQgZGVmYXVsdCBBVWRpcmVjdGlvbkxpbms7XG4iXX0=