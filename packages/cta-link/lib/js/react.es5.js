'use strict';Object.defineProperty(exports,'__esModule',{value:true});var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};var _react=require('react');var _react2=_interopRequireDefault(_react);var _propTypes=require('prop-types');var _propTypes2=_interopRequireDefault(_propTypes);require('../css/styles.css');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _objectWithoutProperties(obj,keys){var target={};for(var i in obj){if(keys.indexOf(i)>=0)continue;if(!Object.prototype.hasOwnProperty.call(obj,i))continue;target[i]=obj[i]}return target}/*! @gov.au/cta-link v2.1.7 *//***************************************************************************************************************************************************************
 *
 * cta-link function
 *
 * Provide a see more/all link when there are too many items to show in the current context.
 *
 **************************************************************************************************************************************************************/// The following line will be replaced automatically with generic imports for the ES5 pipeline.
// You can safely ignore this bit if you use this module with pancake
//
/**
 * DEFAULT
 * The cta link component
 *
 * @param  {string}  linkComponent    - The component used for the link
 * @param  {boolean} dark             - Add the dark variation class, optional
 * @param  {string}  link             - The link target, if not supplied this will render as a button, optional
 * @param  {string}  text             - The text of the CTA link
 * @param  {string}  className        - An additional class, optional
 * @param  {object}  attributeOptions - Any other attribute options
 */var AUctaLink=function AUctaLink(_ref){var linkComponent=_ref.linkComponent,dark=_ref.dark,link=_ref.link,text=_ref.text,_ref$className=_ref.className,className=_ref$className===undefined?'':_ref$className,attributeOptions=_objectWithoutProperties(_ref,['linkComponent','dark','link','text','className']);var LinkComponent=linkComponent;if(link){// If we are using a normal link
if(LinkComponent==='a'){attributeOptions.href=link}// If we are using a link component
else if(typeof LinkComponent==='function'){attributeOptions.to=link}return _react2.default.createElement(LinkComponent,_extends({className:'au-cta-link '+className+(dark?' au-cta-link--dark':'')},attributeOptions),text)}else{return _react2.default.createElement('button',_extends({className:'au-cta-link'+(dark?' au-cta-link--dark':'')},attributeOptions),text)}};AUctaLink.propTypes={dark:_propTypes2.default.bool,link:_propTypes2.default.string,text:_propTypes2.default.string.isRequired,className:_propTypes2.default.string,linkComponent:_propTypes2.default.oneOfType([_propTypes2.default.string,_propTypes2.default.func])};AUctaLink.defaultProps={linkComponent:'a'};exports.default=AUctaLink;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlYWN0LmVzNS5qcyJdLCJuYW1lcyI6WyJBVWN0YUxpbmsiLCJsaW5rQ29tcG9uZW50IiwiZGFyayIsImxpbmsiLCJ0ZXh0IiwiY2xhc3NOYW1lIiwiYXR0cmlidXRlT3B0aW9ucyIsIkxpbmtDb21wb25lbnQiLCJocmVmIiwidG8iLCJwcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJib29sIiwic3RyaW5nIiwiaXNSZXF1aXJlZCIsIm9uZU9mVHlwZSIsImZ1bmMiLCJkZWZhdWx0UHJvcHMiXSwibWFwcGluZ3MiOiJvU0FTQSw0QiwyQ0FDQSxxQyxtREFNQSw2QixxUkFoQkEsOEJBQ0E7Ozs7OztnS0FZQTtBQUNBO0FBQ0E7QUFJQTs7Ozs7Ozs7OztHQVdBLEdBQU1BLFdBQVksUUFBWkEsVUFBWSxNQUE4RSxJQUEzRUMsY0FBMkUsTUFBM0VBLGFBQTJFLENBQTVEQyxJQUE0RCxNQUE1REEsSUFBNEQsQ0FBdERDLElBQXNELE1BQXREQSxJQUFzRCxDQUFoREMsSUFBZ0QsTUFBaERBLElBQWdELHFCQUExQ0MsU0FBMEMsQ0FBMUNBLFNBQTBDLDRCQUE5QixFQUE4QixnQkFBdkJDLGdCQUF1QixtRkFDL0YsR0FBTUMsZUFBZ0JOLGFBQXRCLENBRUEsR0FBSUUsSUFBSixDQUFXLENBQ1Y7QUFDQSxHQUFJSSxnQkFBa0IsR0FBdEIsQ0FBNEIsQ0FDM0JELGlCQUFpQkUsSUFBakIsQ0FBd0JMLElBQ3hCLENBQ0Q7QUFIQSxJQUlLLElBQUksTUFBT0ksY0FBUCxHQUF5QixVQUE3QixDQUEwQyxDQUM5Q0QsaUJBQWlCRyxFQUFqQixDQUFzQk4sSUFDdEIsQ0FFRCxNQUNDLCtCQUFDLGFBQUQsV0FBZSx5QkFBNEJFLFNBQTVCLEVBQTBDSCwwQkFBOEIsRUFBeEUsQ0FBZixFQUFvR0ksZ0JBQXBHLEVBQXlIRixJQUF6SCxDQUVELENBYkQsSUFjSyxDQUNKLE1BQ0Msa0RBQVEseUJBQTJCRiwwQkFBOEIsRUFBekQsQ0FBUixFQUE4RUksZ0JBQTlFLEVBQW1HRixJQUFuRyxDQUVELENBQ0QsQ0F0QkQsQ0F3QkFKLFVBQVVVLFNBQVYsQ0FBc0IsQ0FDckJSLEtBQU1TLG9CQUFVQyxJQURLLENBRXJCVCxLQUFNUSxvQkFBVUUsTUFGSyxDQUdyQlQsS0FBTU8sb0JBQVVFLE1BQVYsQ0FBaUJDLFVBSEYsQ0FJckJULFVBQVdNLG9CQUFVRSxNQUpBLENBS3JCWixjQUFlVSxvQkFBVUksU0FBVixDQUFvQixDQUFFSixvQkFBVUUsTUFBWixDQUFvQkYsb0JBQVVLLElBQTlCLENBQXBCLENBTE0sQ0FBdEIsQ0FRQWhCLFVBQVVpQixZQUFWLENBQXlCLENBQ3hCaEIsY0FBZSxHQURTLENBQXpCLEMsZ0JBSWVELFMiLCJmaWxlIjoicmVhY3QuZXM1LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyohIEBnb3YuYXUvY3RhLWxpbmsgdjIuMS43ICovXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4gKlxuICogY3RhLWxpbmsgZnVuY3Rpb25cbiAqXG4gKiBQcm92aWRlIGEgc2VlIG1vcmUvYWxsIGxpbmsgd2hlbiB0aGVyZSBhcmUgdG9vIG1hbnkgaXRlbXMgdG8gc2hvdyBpbiB0aGUgY3VycmVudCBjb250ZXh0LlxuICpcbiAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cblxuaW1wb3J0IFJlYWN0LCB7IEZyYWdtZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcblxuXG4vLyBUaGUgZm9sbG93aW5nIGxpbmUgd2lsbCBiZSByZXBsYWNlZCBhdXRvbWF0aWNhbGx5IHdpdGggZ2VuZXJpYyBpbXBvcnRzIGZvciB0aGUgRVM1IHBpcGVsaW5lLlxuLy8gWW91IGNhbiBzYWZlbHkgaWdub3JlIHRoaXMgYml0IGlmIHlvdSB1c2UgdGhpcyBtb2R1bGUgd2l0aCBwYW5jYWtlXG4vL1xuaW1wb3J0ICcuLi9jc3Mvc3R5bGVzLmNzcyc7XG5cblxuLyoqXG4gKiBERUZBVUxUXG4gKiBUaGUgY3RhIGxpbmsgY29tcG9uZW50XG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSAgbGlua0NvbXBvbmVudCAgICAtIFRoZSBjb21wb25lbnQgdXNlZCBmb3IgdGhlIGxpbmtcbiAqIEBwYXJhbSAge2Jvb2xlYW59IGRhcmsgICAgICAgICAgICAgLSBBZGQgdGhlIGRhcmsgdmFyaWF0aW9uIGNsYXNzLCBvcHRpb25hbFxuICogQHBhcmFtICB7c3RyaW5nfSAgbGluayAgICAgICAgICAgICAtIFRoZSBsaW5rIHRhcmdldCwgaWYgbm90IHN1cHBsaWVkIHRoaXMgd2lsbCByZW5kZXIgYXMgYSBidXR0b24sIG9wdGlvbmFsXG4gKiBAcGFyYW0gIHtzdHJpbmd9ICB0ZXh0ICAgICAgICAgICAgIC0gVGhlIHRleHQgb2YgdGhlIENUQSBsaW5rXG4gKiBAcGFyYW0gIHtzdHJpbmd9ICBjbGFzc05hbWUgICAgICAgIC0gQW4gYWRkaXRpb25hbCBjbGFzcywgb3B0aW9uYWxcbiAqIEBwYXJhbSAge29iamVjdH0gIGF0dHJpYnV0ZU9wdGlvbnMgLSBBbnkgb3RoZXIgYXR0cmlidXRlIG9wdGlvbnNcbiAqL1xuY29uc3QgQVVjdGFMaW5rID0gKHsgbGlua0NvbXBvbmVudCwgZGFyaywgbGluaywgdGV4dCwgY2xhc3NOYW1lID0gJycsIC4uLmF0dHJpYnV0ZU9wdGlvbnMgfSkgPT4ge1xuXHRjb25zdCBMaW5rQ29tcG9uZW50ID0gbGlua0NvbXBvbmVudDtcblxuXHRpZiggbGluayApIHtcblx0XHQvLyBJZiB3ZSBhcmUgdXNpbmcgYSBub3JtYWwgbGlua1xuXHRcdGlmKCBMaW5rQ29tcG9uZW50ID09PSAnYScgKSB7XG5cdFx0XHRhdHRyaWJ1dGVPcHRpb25zLmhyZWYgPSBsaW5rO1xuXHRcdH1cblx0XHQvLyBJZiB3ZSBhcmUgdXNpbmcgYSBsaW5rIGNvbXBvbmVudFxuXHRcdGVsc2UgaWYoIHR5cGVvZiBMaW5rQ29tcG9uZW50ID09PSAnZnVuY3Rpb24nICkge1xuXHRcdFx0YXR0cmlidXRlT3B0aW9ucy50byA9IGxpbms7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIChcblx0XHRcdDxMaW5rQ29tcG9uZW50IGNsYXNzTmFtZT17IGBhdS1jdGEtbGluayAkeyBjbGFzc05hbWUgfSR7IGRhcmsgPyBgIGF1LWN0YS1saW5rLS1kYXJrYCA6ICcnIH1gIH0geyAuLi5hdHRyaWJ1dGVPcHRpb25zIH0+eyB0ZXh0IH08L0xpbmtDb21wb25lbnQ+XG5cdFx0KTtcblx0fVxuXHRlbHNlIHtcblx0XHRyZXR1cm4gKFxuXHRcdFx0PGJ1dHRvbiBjbGFzc05hbWU9eyBgYXUtY3RhLWxpbmskeyBkYXJrID8gYCBhdS1jdGEtbGluay0tZGFya2AgOiAnJyB9YCB9IHsgLi4uYXR0cmlidXRlT3B0aW9ucyB9PnsgdGV4dCB9PC9idXR0b24+XG5cdFx0KTtcblx0fVxufVxuXG5BVWN0YUxpbmsucHJvcFR5cGVzID0ge1xuXHRkYXJrOiBQcm9wVHlwZXMuYm9vbCxcblx0bGluazogUHJvcFR5cGVzLnN0cmluZyxcblx0dGV4dDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuXHRjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG5cdGxpbmtDb21wb25lbnQ6IFByb3BUeXBlcy5vbmVPZlR5cGUoWyBQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMuZnVuYyBdKVxufTtcblxuQVVjdGFMaW5rLmRlZmF1bHRQcm9wcyA9IHtcblx0bGlua0NvbXBvbmVudDogJ2EnLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgQVVjdGFMaW5rO1xuIl19