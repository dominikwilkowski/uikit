'use strict';Object.defineProperty(exports,'__esModule',{value:true});var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};var _react=require('react');var _react2=_interopRequireDefault(_react);var _propTypes=require('prop-types');var _propTypes2=_interopRequireDefault(_propTypes);require('../css/styles.css');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _objectWithoutProperties(obj,keys){var target={};for(var i in obj){if(keys.indexOf(i)>=0)continue;if(!Object.prototype.hasOwnProperty.call(obj,i))continue;target[i]=obj[i]}return target}/*! @gov.au/page-alerts v2.1.1 *//***************************************************************************************************************************************************************
 *
 * Page alert function
 *
 * Use page alert to notify and alert users of important application events.
 *
 **************************************************************************************************************************************************************/// The following line will be replaced automatically with generic imports for the ES5 pipeline.
// You can safely ignore this bit if you use this module with pancake
//
/**
 * All different kind of alerts
 *
 * @type {Object}
 */var options={info:'au-page-alerts--info',warning:'au-page-alerts--warning',error:'au-page-alerts--error',success:'au-page-alerts--success'};/**
 * DEFAULT
 * Page alert
 *
 * @param  {boolean} dark             - Add the dark variation class, optional
 * @param  {boolean} alt              - Add the alt variation class, optional
 * @param  {string}  as               - What kind of alert this is, takes: 'info', 'warning', 'error', 'success'
 * @param  {node}    children         - Anything inside the component
 * @param  {string}  className        - An additional class, optional
 * @param  {object}  attributeOptions - Any other attribute options
 */var AUpageAlert=function AUpageAlert(_ref){var as=_ref.as,alt=_ref.alt,dark=_ref.dark,children=_ref.children,_ref$className=_ref.className,className=_ref$className===undefined?'':_ref$className,attributeOptions=_objectWithoutProperties(_ref,['as','alt','dark','children','className']);return _react2.default.createElement('div',_extends({className:'au-body au-page-alerts '+className+' '+(dark?' au-page-alerts--dark au-body--dark':'')+(alt?' au-page-alerts--alt au-body--alt':'')+' '+options[as]},attributeOptions),children)};AUpageAlert.propTypes={as:_propTypes2.default.oneOf(['info','warning','error','success']).isRequired,alt:_propTypes2.default.bool,dark:_propTypes2.default.bool,children:_propTypes2.default.node.isRequired,className:_propTypes2.default.string};exports.default=AUpageAlert;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlYWN0LmVzNS5qcyJdLCJuYW1lcyI6WyJvcHRpb25zIiwiaW5mbyIsIndhcm5pbmciLCJlcnJvciIsInN1Y2Nlc3MiLCJBVXBhZ2VBbGVydCIsImFzIiwiYWx0IiwiZGFyayIsImNoaWxkcmVuIiwiY2xhc3NOYW1lIiwiYXR0cmlidXRlT3B0aW9ucyIsInByb3BUeXBlcyIsIlByb3BUeXBlcyIsIm9uZU9mIiwiaXNSZXF1aXJlZCIsImJvb2wiLCJub2RlIiwic3RyaW5nIl0sIm1hcHBpbmdzIjoib1NBU0EsNEIsMkNBQ0EscUMsbURBTUEsNkIscVJBaEJBLGlDQUNBOzs7Ozs7Z0tBWUE7QUFDQTtBQUNBO0FBR0E7Ozs7R0FLQSxHQUFNQSxTQUFVLENBQ2ZDLEtBQU0sc0JBRFMsQ0FFZkMsUUFBUyx5QkFGTSxDQUdmQyxNQUFPLHVCQUhRLENBSWZDLFFBQVMseUJBSk0sQ0FBaEIsQ0FRQTs7Ozs7Ozs7OztHQVdBLEdBQU1DLGFBQWMsUUFBZEEsWUFBYyxVQUFHQyxHQUFILE1BQUdBLEVBQUgsQ0FBT0MsR0FBUCxNQUFPQSxHQUFQLENBQVlDLElBQVosTUFBWUEsSUFBWixDQUFrQkMsUUFBbEIsTUFBa0JBLFFBQWxCLHFCQUE0QkMsU0FBNUIsQ0FBNEJBLFNBQTVCLDRCQUF3QyxFQUF4QyxnQkFBK0NDLGdCQUEvQyxpRkFDbkIsK0NBQ0Msb0NBQXNDRCxTQUF0QyxNQUNDRixLQUNHLHFDQURILENBRUcsRUFISixHQUtDRCxJQUNHLG1DQURILENBRUcsRUFQSixNQVFNUCxRQUFTTSxFQUFULENBVFAsRUFTOEJLLGdCQVQ5QixFQVdHRixRQVhILENBRG1CLENBQXBCLENBZ0JBSixZQUFZTyxTQUFaLENBQXdCLENBQ3ZCTixHQUFJTyxvQkFBVUMsS0FBVixDQUFnQixDQUFFLE1BQUYsQ0FBVSxTQUFWLENBQXFCLE9BQXJCLENBQThCLFNBQTlCLENBQWhCLEVBQTJEQyxVQUR4QyxDQUV2QlIsSUFBS00sb0JBQVVHLElBRlEsQ0FHdkJSLEtBQU1LLG9CQUFVRyxJQUhPLENBSXZCUCxTQUFVSSxvQkFBVUksSUFBVixDQUFlRixVQUpGLENBS3ZCTCxVQUFXRyxvQkFBVUssTUFMRSxDQUF4QixDLGdCQVFlYixXIiwiZmlsZSI6InJlYWN0LmVzNS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qISBAZ292LmF1L3BhZ2UtYWxlcnRzIHYyLjEuMSAqL1xuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuICpcbiAqIFBhZ2UgYWxlcnQgZnVuY3Rpb25cbiAqXG4gKiBVc2UgcGFnZSBhbGVydCB0byBub3RpZnkgYW5kIGFsZXJ0IHVzZXJzIG9mIGltcG9ydGFudCBhcHBsaWNhdGlvbiBldmVudHMuXG4gKlxuICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuXG5pbXBvcnQgUmVhY3QsIHsgRnJhZ21lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuXG5cbi8vIFRoZSBmb2xsb3dpbmcgbGluZSB3aWxsIGJlIHJlcGxhY2VkIGF1dG9tYXRpY2FsbHkgd2l0aCBnZW5lcmljIGltcG9ydHMgZm9yIHRoZSBFUzUgcGlwZWxpbmUuXG4vLyBZb3UgY2FuIHNhZmVseSBpZ25vcmUgdGhpcyBiaXQgaWYgeW91IHVzZSB0aGlzIG1vZHVsZSB3aXRoIHBhbmNha2Vcbi8vXG5pbXBvcnQgJy4uL2Nzcy9zdHlsZXMuY3NzJztcblxuLyoqXG4gKiBBbGwgZGlmZmVyZW50IGtpbmQgb2YgYWxlcnRzXG4gKlxuICogQHR5cGUge09iamVjdH1cbiAqL1xuY29uc3Qgb3B0aW9ucyA9IHtcblx0aW5mbzogJ2F1LXBhZ2UtYWxlcnRzLS1pbmZvJyxcblx0d2FybmluZzogJ2F1LXBhZ2UtYWxlcnRzLS13YXJuaW5nJyxcblx0ZXJyb3I6ICdhdS1wYWdlLWFsZXJ0cy0tZXJyb3InLFxuXHRzdWNjZXNzOiAnYXUtcGFnZS1hbGVydHMtLXN1Y2Nlc3MnLFxufTtcblxuXG4vKipcbiAqIERFRkFVTFRcbiAqIFBhZ2UgYWxlcnRcbiAqXG4gKiBAcGFyYW0gIHtib29sZWFufSBkYXJrICAgICAgICAgICAgIC0gQWRkIHRoZSBkYXJrIHZhcmlhdGlvbiBjbGFzcywgb3B0aW9uYWxcbiAqIEBwYXJhbSAge2Jvb2xlYW59IGFsdCAgICAgICAgICAgICAgLSBBZGQgdGhlIGFsdCB2YXJpYXRpb24gY2xhc3MsIG9wdGlvbmFsXG4gKiBAcGFyYW0gIHtzdHJpbmd9ICBhcyAgICAgICAgICAgICAgIC0gV2hhdCBraW5kIG9mIGFsZXJ0IHRoaXMgaXMsIHRha2VzOiAnaW5mbycsICd3YXJuaW5nJywgJ2Vycm9yJywgJ3N1Y2Nlc3MnXG4gKiBAcGFyYW0gIHtub2RlfSAgICBjaGlsZHJlbiAgICAgICAgIC0gQW55dGhpbmcgaW5zaWRlIHRoZSBjb21wb25lbnRcbiAqIEBwYXJhbSAge3N0cmluZ30gIGNsYXNzTmFtZSAgICAgICAgLSBBbiBhZGRpdGlvbmFsIGNsYXNzLCBvcHRpb25hbFxuICogQHBhcmFtICB7b2JqZWN0fSAgYXR0cmlidXRlT3B0aW9ucyAtIEFueSBvdGhlciBhdHRyaWJ1dGUgb3B0aW9uc1xuICovXG5jb25zdCBBVXBhZ2VBbGVydCA9ICh7IGFzLCBhbHQsIGRhcmssIGNoaWxkcmVuLCBjbGFzc05hbWUgPSAnJywgLi4uYXR0cmlidXRlT3B0aW9ucyB9KSA9PiAoXG5cdDxkaXZcblx0XHRjbGFzc05hbWU9e2BhdS1ib2R5IGF1LXBhZ2UtYWxlcnRzICR7IGNsYXNzTmFtZSB9ICR7XG5cdFx0XHRkYXJrXG5cdFx0XHRcdD8gJyBhdS1wYWdlLWFsZXJ0cy0tZGFyayBhdS1ib2R5LS1kYXJrJ1xuXHRcdFx0XHQ6ICcnXG5cdFx0XHR9JHtcblx0XHRcdGFsdFxuXHRcdFx0XHQ/ICcgYXUtcGFnZS1hbGVydHMtLWFsdCBhdS1ib2R5LS1hbHQnXG5cdFx0XHRcdDogJydcblx0XHRcdH0gJHsgb3B0aW9uc1sgYXMgXSB9YH0geyAuLi5hdHRyaWJ1dGVPcHRpb25zIH1cblx0PlxuXHRcdHsgY2hpbGRyZW4gfVxuXHQ8L2Rpdj5cbik7XG5cbkFVcGFnZUFsZXJ0LnByb3BUeXBlcyA9IHtcblx0YXM6IFByb3BUeXBlcy5vbmVPZihbICdpbmZvJywgJ3dhcm5pbmcnLCAnZXJyb3InLCAnc3VjY2VzcycgXSkuaXNSZXF1aXJlZCxcblx0YWx0OiBQcm9wVHlwZXMuYm9vbCxcblx0ZGFyazogUHJvcFR5cGVzLmJvb2wsXG5cdGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZS5pc1JlcXVpcmVkLFxuXHRjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG59O1xuXG5leHBvcnQgZGVmYXVsdCBBVXBhZ2VBbGVydDtcbiJdfQ==