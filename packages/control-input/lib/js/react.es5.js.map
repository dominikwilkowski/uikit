{
  "version": 3,
  "sources": [
    "react.es5.js"
  ],
  "names": [
    "AUcheckbox",
    "dark",
    "alt",
    "small",
    "block",
    "label",
    "status",
    "className",
    "attributeOptions",
    "propTypes",
    "PropTypes",
    "bool",
    "string",
    "isRequired",
    "oneOf",
    "AUradio"
  ],
  "mappings": "iVASA,4B,2CACA,qC,mDAMA,6B,qRAhBA,mCACA;;;;;;gKAYA;AACA;AACA;AAIA;;;;;;;;;;;;GAaO,GAAMA,YAAa,QAAbA,WAAa,MAAqF,IAAlFC,KAAkF,MAAlFA,IAAkF,CAA5EC,GAA4E,MAA5EA,GAA4E,CAAvEC,KAAuE,MAAvEA,KAAuE,CAAhEC,KAAgE,MAAhEA,KAAgE,CAAzDC,KAAyD,MAAzDA,KAAyD,CAAlDC,MAAkD,MAAlDA,MAAkD,qBAA1CC,SAA0C,CAA1CA,SAA0C,4BAA9B,EAA8B,gBAAvBC,gBAAuB,4FAC9G,MACC,wCAAO,UACN,oBAAqBD,SAArB,MACIN,KAAO,yBAAP,CAAmC,EADvC,QAEIC,IAAM,wBAAN,CAAiC,EAFrC,QAGIC,MAAQ,0BAAR,CAAqC,EAHzC,QAIIC,iCAAqC,EAJzC,QAKIE,SAAW,OAAX,CAAqB,0BAArB,CAAkD,EALtD,QAMIA,SAAW,SAAX,CAAuB,4BAAvB,CAAsD,EAN1D,EADD,EASC,gDAAO,UAAU,yBAAjB,CAA2C,KAAK,UAAhD,EAAgEE,gBAAhE,EATD,CAUC,sCAAM,UAAU,wBAAhB,EAA2CH,KAA3C,CAVD,CAaD,CAfM,C,8BAiBPL,WAAWS,SAAX,CAAuB,CACtBR,KAAMS,oBAAUC,IADM,CAEtBT,IAAKQ,oBAAUC,IAFO,CAGtBR,MAAOO,oBAAUC,IAHK,CAItBP,MAAOM,oBAAUC,IAJK,CAKtBN,MAAOK,oBAAUE,MAAV,CAAiBC,UALF,CAMtBP,OAAQI,oBAAUI,KAAV,CAAgB,CAAE,OAAF,CAAW,SAAX,CAAhB,CANc,CAOtBP,UAAWG,oBAAUE,MAPC,CAAvB,CAWA;;;;;;;;;;;GAYO,GAAMG,SAAU,QAAVA,QAAU,OAAqF,IAAlFd,KAAkF,OAAlFA,IAAkF,CAA5EC,GAA4E,OAA5EA,GAA4E,CAAvEC,KAAuE,OAAvEA,KAAuE,CAAhEC,KAAgE,OAAhEA,KAAgE,CAAzDC,KAAyD,OAAzDA,KAAyD,CAAlDC,MAAkD,OAAlDA,MAAkD,uBAA1CC,SAA0C,CAA1CA,SAA0C,6BAA9B,EAA8B,iBAAvBC,gBAAuB,6FAE3G,MACC,wCAAO,UACN,oBAAqBD,SAArB,MACIN,+BAAmC,EADvC,QAEIC,6BAAiC,EAFrC,QAGIC,iCAAqC,EAHzC,QAIIC,iCAAqC,EAJzC,QAKIE,SAAW,OAAX,CAAqB,0BAArB,CAAkD,EALtD,QAMIA,SAAW,SAAX,CAAuB,4BAAvB,CAAsD,EAN1D,EADD,EASC,gDAAO,UAAU,yBAAjB,CAA2C,KAAK,OAAhD,EAA6DE,gBAA7D,EATD,CAUC,sCAAM,UAAU,wBAAhB,EAA2CH,KAA3C,CAVD,CAaD,CAhBM,C,wBAkBPU,QAAQN,SAAR,CAAoB,CACnBR,KAAMS,oBAAUC,IADG,CAEnBT,IAAKQ,oBAAUC,IAFI,CAGnBR,MAAOO,oBAAUC,IAHE,CAInBP,MAAOM,oBAAUC,IAJE,CAKnBN,MAAOK,oBAAUE,MAAV,CAAiBC,UALL,CAMnBP,OAAQI,oBAAUI,KAAV,CAAgB,CAAE,OAAF,CAAW,SAAX,CAAhB,CANW,CAOnBP,UAAWG,oBAAUE,MAPF,CAApB",
  "file": "react.es5.js",
  "sourcesContent": [
    "/*! @gov.au/control-input v2.2.2 */\n/***************************************************************************************************************************************************************\n *\n * control-input function\n *\n * Control inputs include radio buttons and checkboxes. They allow users to select one or more options.\n *\n **************************************************************************************************************************************************************/\n\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\n\n// The following line will be replaced automatically with generic imports for the ES5 pipeline.\n// You can safely ignore this bit if you use this module with pancake\n//\nimport '../css/styles.css';\n\n\n/**\n * The checkbox component\n *\n * @param  {boolean} dark             - Add the dark variation class, optional\n * @param  {boolean} alt              - Add the alt variation class, optional\n * @param  {boolean} small            - Add the small variation class\n * @param  {boolean} block            - Add the block variation class\n * @param  {string}  label            - The label\n * @param  {string}  status           - Mark this field as either 'valid' or 'invalid', optional\n * @param  {string}  className        - An additional class, optional\n * @param  {object}  attributeOptions - Any other attribute options\n *\n */\nexport const AUcheckbox = ({ dark, alt, small, block, label, status, className = '', ...attributeOptions }) => {\n\treturn (\n\t\t<label className={\n\t\t\t`au-control-input ${ className }` +\n\t\t\t`${ dark ? ' au-control-input--dark' : '' }` +\n\t\t\t`${ alt ? ' au-control-input--alt' : '' }` +\n\t\t\t`${ small ? ' au-control-input--small' : '' }` +\n\t\t\t`${ block ? ` au-control-input--block` : '' }` +\n\t\t\t`${ status === 'valid' ? ' au-control-input--valid' : '' }` +\n\t\t\t`${ status === 'invalid' ? ' au-control-input--invalid' : '' }`\n\t\t}>\n\t\t\t<input className=\"au-control-input__input\" type=\"checkbox\" { ...attributeOptions } />\n\t\t\t<span className=\"au-control-input__text\">{ label }</span>\n\t\t</label>\n\t);\n};\n\nAUcheckbox.propTypes = {\n\tdark: PropTypes.bool,\n\talt: PropTypes.bool,\n\tsmall: PropTypes.bool,\n\tblock: PropTypes.bool,\n\tlabel: PropTypes.string.isRequired,\n\tstatus: PropTypes.oneOf([ 'valid', 'invalid' ]),\n\tclassName: PropTypes.string,\n};\n\n\n/**\n * The radio component\n *\n * @param  {boolean} dark             - Add the dark variation class, optional\n * @param  {boolean} alt              - Add the alt variation class, optional\n * @param  {boolean} small            - Add the small variation class\n * @param  {boolean} block            - Add the block variation class\n * @param  {string}  label            - The label\n * @param  {string}  status           - Mark this field as either 'valid' or 'invalid', optional\n * @param  {string}  className        - An additional class, optional\n * @param  {object}  attributeOptions - Any other attribute options\n */\nexport const AUradio = ({ dark, alt, small, block, label, status, className = '', ...attributeOptions }) => {\n\n\treturn (\n\t\t<label className={\n\t\t\t`au-control-input ${ className }` +\n\t\t\t`${ dark ? ` au-control-input--dark` : '' }` +\n\t\t\t`${ alt ? ` au-control-input--alt` : '' }` +\n\t\t\t`${ small ? ` au-control-input--small` : '' }` +\n\t\t\t`${ block ? ` au-control-input--block` : '' }` +\n\t\t\t`${ status === 'valid' ? ' au-control-input--valid' : '' }` +\n\t\t\t`${ status === 'invalid' ? ' au-control-input--invalid' : '' }`\n\t\t} >\n\t\t\t<input className=\"au-control-input__input\" type=\"radio\" { ...attributeOptions } />\n\t\t\t<span className=\"au-control-input__text\">{ label }</span>\n\t\t</label>\n\t);\n};\n\nAUradio.propTypes = {\n\tdark: PropTypes.bool,\n\talt: PropTypes.bool,\n\tsmall: PropTypes.bool,\n\tblock: PropTypes.bool,\n\tlabel: PropTypes.string.isRequired,\n\tstatus: PropTypes.oneOf([ 'valid', 'invalid' ]),\n\tclassName: PropTypes.string,\n};\n"
  ]
}