'use strict';Object.defineProperty(exports,'__esModule',{value:true});exports.AUcalloutCalendar=exports.AUcallout=undefined;var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};var _react=require('react');var _react2=_interopRequireDefault(_react);var _propTypes=require('prop-types');var _propTypes2=_interopRequireDefault(_propTypes);require('../css/styles.css');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _objectWithoutProperties(obj,keys){var target={};for(var i in obj){if(keys.indexOf(i)>=0)continue;if(!Object.prototype.hasOwnProperty.call(obj,i))continue;target[i]=obj[i]}return target}/*! @gov.au/callout v3.0.1 *//***************************************************************************************************************************************************************
 *
 * Callout function
 *
 * Use callout to notify and alert users of important snippets of information.
 *
 **************************************************************************************************************************************************************/// The following line will be replaced automatically with generic imports for the ES5 pipeline.
// You can safely ignore this bit if you use this module with pancake
//
/**
 * Default callout
 *
 * @param  {string}  title            - The title of the header
 * @param  {string}  level            - The tag level (<h1/> <h2/> etc), default: '1'
 * @param  {boolean} srOnlyTitle      - Title is visible to screen readers only
 * @param  {boolean} dark             - Add the dark variation class, optional
 * @param  {boolean} alt              - Add the alt variation class, optional
 * @param  {string}  children         - Anything inside
 * @param  {string}  className        - An additional class, optional
 * @param  {object}  attributeOptions - Any other attribute options
 */var AUcallout=function AUcallout(_ref){var title=_ref.title,level=_ref.level,srOnlyTitle=_ref.srOnlyTitle,dark=_ref.dark,alt=_ref.alt,description=_ref.description,children=_ref.children,_ref$className=_ref.className,className=_ref$className===undefined?'':_ref$className,attributeOptions=_objectWithoutProperties(_ref,['title','level','srOnlyTitle','dark','alt','description','children','className']);var HeadingTag='h'+level;return _react2.default.createElement('section',_extends({className:'au-callout '+className+(dark?' au-callout--dark':'')+(alt?' au-callout--alt':'')},attributeOptions),_react2.default.createElement(HeadingTag,{children:title,className:'au-callout__heading'+(srOnlyTitle?' au-callout__heading--sronly':'')}),children)};exports.AUcallout=AUcallout;AUcallout.propTypes={title:_propTypes2.default.string.isRequired,level:_propTypes2.default.number,srOnlyTitle:_propTypes2.default.bool,dark:_propTypes2.default.bool,alt:_propTypes2.default.bool,children:_propTypes2.default.node.isRequired,className:_propTypes2.default.string};AUcallout.defaultProps={level:2,srOnlyTitle:false};/**
 * Calendar callout
 *
 * @param  {string}  title            - The title of the header
 * @param  {string}  level            - The tag level (<h1/> <h2/> etc), default: '1'
 * @param  {boolean} srOnlyTitle      - Title is visible to screen readers only
 * @param  {boolean} dark             - Add the dark variation class, optional
 * @param  {boolean} alt              - Add the alt variation class, optional
 * @param  {string}  subline          - The subline of the event, optional
 * @param  {string}  datetime         - The datetime of the event as ISO datetime
 * @param  {string}  time             - The time that appears on the page
 * @param  {string}  name             - The name of the event, optional
 * @param  {string}  className        - An additional class, optional
 * @param  {object}  attributeOptions - Any other attribute options
 */var AUcalloutCalendar=function AUcalloutCalendar(_ref2){var title=_ref2.title,level=_ref2.level,srOnlyTitle=_ref2.srOnlyTitle,dark=_ref2.dark,alt=_ref2.alt,subline=_ref2.subline,datetime=_ref2.datetime,time=_ref2.time,name=_ref2.name,_ref2$className=_ref2.className,className=_ref2$className===undefined?'':_ref2$className,attributeOptions=_objectWithoutProperties(_ref2,['title','level','srOnlyTitle','dark','alt','subline','datetime','time','name','className']);var HeadingTag='h'+level;return _react2.default.createElement('section',_extends({className:'au-callout au-callout--calendar-event '+className+(dark?' au-callout--dark':'')+(alt?' au-callout--alt':'')},attributeOptions),_react2.default.createElement(HeadingTag,{children:title,className:'au-callout__heading'+(srOnlyTitle?' au-callout__heading--sronly':'')}),subline&&_react2.default.createElement('p',{className:'au-callout--calendar-event__lede'},subline),_react2.default.createElement('time',{className:'au-callout--calendar-event__time',dateTime:new Date(datetime).toJSON()},time),name&&_react2.default.createElement('span',{className:'au-callout--calendar-event__name'},name))};exports.AUcalloutCalendar=AUcalloutCalendar;AUcalloutCalendar.propTypes={title:_propTypes2.default.string.isRequired,level:_propTypes2.default.number,srOnlyTitle:_propTypes2.default.bool,dark:_propTypes2.default.bool,alt:_propTypes2.default.bool,subline:_propTypes2.default.string,datetime:_propTypes2.default.string.isRequired,time:_propTypes2.default.string.isRequired,name:_propTypes2.default.string,className:_propTypes2.default.string};AUcalloutCalendar.defaultProps={level:2,srOnlyTitle:true};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,