'use strict';Object.defineProperty(exports,'__esModule',{value:true});var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};var _react=require('react');var _react2=_interopRequireDefault(_react);var _propTypes=require('prop-types');var _propTypes2=_interopRequireDefault(_propTypes);var _linkList=require('@gov.au/link-list');var _linkList2=_interopRequireDefault(_linkList);require('../css/styles.css');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _objectWithoutProperties(obj,keys){var target={};for(var i in obj){if(keys.indexOf(i)>=0)continue;if(!Object.prototype.hasOwnProperty.call(obj,i))continue;target[i]=obj[i]}return target}/*! @gov.au/breadcrumbs v3.0.3 *//***************************************************************************************************************************************************************
 *
 * breadcrumbs function
 *
 * Breadcrumbs help users understand where they are in the service and how they got there.
 *
 **************************************************************************************************************************************************************/// ES6 dependency: import AUlinkList from './link-list';
// The following line will be replaced automatically with generic imports for the ES5 pipeline.
// You can safely ignore this bit if you use this module with pancake
//
/**
 * DEFAULT
 * The breadcrumbs component
 *
 * @param  {boolean} dark             - Add the dark variation class, optional
 * @param  {string}  label            - The aria label of the component
 * @param  {array}   items            - Items inside the breadcrumbs passed on to AUlinkList
 * @param  {string}  linkComponent    - The component used for the link
 * @param  {string}  className        - An additional class, optional
 * @param  {object}  attributeOptions - Any other attribute options
 */var AUbreadcrumbs=function AUbreadcrumbs(_ref){var dark=_ref.dark,label=_ref.label,items=_ref.items,linkComponent=_ref.linkComponent,_ref$className=_ref.className,className=_ref$className===undefined?'':_ref$className,attributeOptions=_objectWithoutProperties(_ref,['dark','label','items','linkComponent','className']);return _react2.default.createElement('nav',_extends({className:'au-breadcrumbs '+className+(dark?' au-breadcrumbs--dark':''),'aria-label':label},attributeOptions),_react2.default.createElement(_linkList2.default,{inline:true,linkComponent:linkComponent,items:items}))};AUbreadcrumbs.propTypes={dark:_propTypes2.default.bool,label:_propTypes2.default.string.isRequired,items:_propTypes2.default.arrayOf(_propTypes2.default.shape({link:_propTypes2.default.string,text:_propTypes2.default.string.isRequired})).isRequired,linkComponent:_propTypes2.default.oneOfType([_propTypes2.default.string,_propTypes2.default.func])};AUbreadcrumbs.defaultProps={linkComponent:'a'};exports.default=AUbreadcrumbs;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlYWN0LmVzNS5qcyJdLCJuYW1lcyI6WyJBVWJyZWFkY3J1bWJzIiwiZGFyayIsImxhYmVsIiwiaXRlbXMiLCJsaW5rQ29tcG9uZW50IiwiY2xhc3NOYW1lIiwiYXR0cmlidXRlT3B0aW9ucyIsInByb3BUeXBlcyIsIlByb3BUeXBlcyIsImJvb2wiLCJzdHJpbmciLCJpc1JlcXVpcmVkIiwiYXJyYXlPZiIsInNoYXBlIiwibGluayIsInRleHQiLCJvbmVPZlR5cGUiLCJmdW5jIiwiZGVmYXVsdFByb3BzIl0sIm1hcHBpbmdzIjoib1NBU0EsNEIsMkNBQ0EscUMsbURBRUEsMkMsaURBT0EsNkIscVJBbkJBLGlDQUNBOzs7Ozs7Z0tBWUE7QUFHQTtBQUNBO0FBQ0E7QUFJQTs7Ozs7Ozs7OztHQVdBLEdBQU1BLGVBQWdCLFFBQWhCQSxjQUFnQixVQUFHQyxLQUFILE1BQUdBLElBQUgsQ0FBU0MsS0FBVCxNQUFTQSxLQUFULENBQWdCQyxLQUFoQixNQUFnQkEsS0FBaEIsQ0FBdUJDLGFBQXZCLE1BQXVCQSxhQUF2QixxQkFBc0NDLFNBQXRDLENBQXNDQSxTQUF0Qyw0QkFBa0QsRUFBbEQsZ0JBQXlEQyxnQkFBekQsMkZBQ3JCLCtDQUNDLDRCQUErQkQsU0FBL0IsRUFBNkNKLEtBQU8sdUJBQVAsQ0FBaUMsRUFBOUUsQ0FERCxDQUVDLGFBQWFDLEtBRmQsRUFHTUksZ0JBSE4sRUFLQyw4QkFBQyxrQkFBRCxFQUFZLFdBQVosQ0FBbUIsY0FBZ0JGLGFBQW5DLENBQW1ELE1BQVFELEtBQTNELEVBTEQsQ0FEcUIsQ0FBdEIsQ0FVQUgsY0FBY08sU0FBZCxDQUEwQixDQUN6Qk4sS0FBTU8sb0JBQVVDLElBRFMsQ0FFekJQLE1BQU9NLG9CQUFVRSxNQUFWLENBQWlCQyxVQUZDLENBR3pCUixNQUFPSyxvQkFBVUksT0FBVixDQUNOSixvQkFBVUssS0FBVixDQUFnQixDQUNmQyxLQUFNTixvQkFBVUUsTUFERCxDQUVmSyxLQUFNUCxvQkFBVUUsTUFBVixDQUFpQkMsVUFGUixDQUFoQixDQURNLEVBS0xBLFVBUnVCLENBU3pCUCxjQUFlSSxvQkFBVVEsU0FBVixDQUFvQixDQUFFUixvQkFBVUUsTUFBWixDQUFvQkYsb0JBQVVTLElBQTlCLENBQXBCLENBVFUsQ0FBMUIsQ0FZQWpCLGNBQWNrQixZQUFkLENBQTZCLENBQzVCZCxjQUFlLEdBRGEsQ0FBN0IsQyxnQkFJZUosYSIsImZpbGUiOiJyZWFjdC5lczUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGdvdi5hdS9icmVhZGNydW1icyB2My4wLjMgKi9cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcbiAqXG4gKiBicmVhZGNydW1icyBmdW5jdGlvblxuICpcbiAqIEJyZWFkY3J1bWJzIGhlbHAgdXNlcnMgdW5kZXJzdGFuZCB3aGVyZSB0aGV5IGFyZSBpbiB0aGUgc2VydmljZSBhbmQgaG93IHRoZXkgZ290IHRoZXJlLlxuICpcbiAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cblxuaW1wb3J0IFJlYWN0LCB7IEZyYWdtZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcblxuaW1wb3J0IEFVbGlua0xpc3QgZnJvbSAnQGdvdi5hdS9saW5rLWxpc3QnO1xuLy8gRVM2IGRlcGVuZGVuY3k6IGltcG9ydCBBVWxpbmtMaXN0IGZyb20gJy4vbGluay1saXN0JztcblxuXG4vLyBUaGUgZm9sbG93aW5nIGxpbmUgd2lsbCBiZSByZXBsYWNlZCBhdXRvbWF0aWNhbGx5IHdpdGggZ2VuZXJpYyBpbXBvcnRzIGZvciB0aGUgRVM1IHBpcGVsaW5lLlxuLy8gWW91IGNhbiBzYWZlbHkgaWdub3JlIHRoaXMgYml0IGlmIHlvdSB1c2UgdGhpcyBtb2R1bGUgd2l0aCBwYW5jYWtlXG4vL1xuaW1wb3J0ICcuLi9jc3Mvc3R5bGVzLmNzcyc7XG5cblxuLyoqXG4gKiBERUZBVUxUXG4gKiBUaGUgYnJlYWRjcnVtYnMgY29tcG9uZW50XG4gKlxuICogQHBhcmFtICB7Ym9vbGVhbn0gZGFyayAgICAgICAgICAgICAtIEFkZCB0aGUgZGFyayB2YXJpYXRpb24gY2xhc3MsIG9wdGlvbmFsXG4gKiBAcGFyYW0gIHtzdHJpbmd9ICBsYWJlbCAgICAgICAgICAgIC0gVGhlIGFyaWEgbGFiZWwgb2YgdGhlIGNvbXBvbmVudFxuICogQHBhcmFtICB7YXJyYXl9ICAgaXRlbXMgICAgICAgICAgICAtIEl0ZW1zIGluc2lkZSB0aGUgYnJlYWRjcnVtYnMgcGFzc2VkIG9uIHRvIEFVbGlua0xpc3RcbiAqIEBwYXJhbSAge3N0cmluZ30gIGxpbmtDb21wb25lbnQgICAgLSBUaGUgY29tcG9uZW50IHVzZWQgZm9yIHRoZSBsaW5rXG4gKiBAcGFyYW0gIHtzdHJpbmd9ICBjbGFzc05hbWUgICAgICAgIC0gQW4gYWRkaXRpb25hbCBjbGFzcywgb3B0aW9uYWxcbiAqIEBwYXJhbSAge29iamVjdH0gIGF0dHJpYnV0ZU9wdGlvbnMgLSBBbnkgb3RoZXIgYXR0cmlidXRlIG9wdGlvbnNcbiAqL1xuY29uc3QgQVVicmVhZGNydW1icyA9ICh7IGRhcmssIGxhYmVsLCBpdGVtcywgbGlua0NvbXBvbmVudCwgY2xhc3NOYW1lID0gJycsIC4uLmF0dHJpYnV0ZU9wdGlvbnMgfSkgPT4gKFxuXHQ8bmF2XG5cdFx0Y2xhc3NOYW1lPXsgYGF1LWJyZWFkY3J1bWJzICR7IGNsYXNzTmFtZSB9JHsgZGFyayA/ICcgYXUtYnJlYWRjcnVtYnMtLWRhcmsnIDogJycgfWAgfVxuXHRcdGFyaWEtbGFiZWw9eyBsYWJlbCB9XG5cdFx0eyAuLi5hdHRyaWJ1dGVPcHRpb25zIH1cblx0PlxuXHRcdDxBVWxpbmtMaXN0IGlubGluZSBsaW5rQ29tcG9uZW50PXsgbGlua0NvbXBvbmVudCB9IGl0ZW1zPXsgaXRlbXMgfSAvPlxuXHQ8L25hdj5cbik7XG5cbkFVYnJlYWRjcnVtYnMucHJvcFR5cGVzID0ge1xuXHRkYXJrOiBQcm9wVHlwZXMuYm9vbCxcblx0bGFiZWw6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcblx0aXRlbXM6IFByb3BUeXBlcy5hcnJheU9mKFxuXHRcdFByb3BUeXBlcy5zaGFwZSh7XG5cdFx0XHRsaW5rOiBQcm9wVHlwZXMuc3RyaW5nLFxuXHRcdFx0dGV4dDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuXHRcdH0pXG5cdCkuaXNSZXF1aXJlZCxcblx0bGlua0NvbXBvbmVudDogUHJvcFR5cGVzLm9uZU9mVHlwZShbIFByb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5mdW5jIF0pXG59O1xuXG5BVWJyZWFkY3J1bWJzLmRlZmF1bHRQcm9wcyA9IHtcblx0bGlua0NvbXBvbmVudDogJ2EnLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgQVVicmVhZGNydW1icztcbiJdfQ==